server:
  port: 9002

spring:
  application:
    name: TICKETDAATA-ORDERS-SERVICE
  data:
    mongodb:
      uri: mongodb+srv://ahmedalfey:sani9999@hackathon.rflqj.mongodb.net/TicketDaata?retryWrites=true&w=majority
      database: ticketdaata_orders
      auto-index-creation: true
      host: hackathon.rflqj.mongodb.net
      port: 27017
      username: ahmedalfey
      password: sani9999
      authentication-database: admin
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration
  # Messaging Configuration
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    connection-timeout: 10000
    listener:
      simple:
        retry:
          enabled: true
          max-attempts: 3
          initial-interval: 1000
        acknowledge-mode: auto
        prefetch: 10

# Messaging Mode Configuration
messaging:
  mode: inmemory # Options: inmemory, rabbitmq

# Order Configuration
orders:
  reservation:
    ttl-minutes: 15 # Time to live for temporary reservations
    cleanup-interval-minutes: 5 # How often to check for expired orders

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    hostname: localhost

feign:
  client:
    config:
      TICKETDAATA-TICKET-SERVICE:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic

logging:
  level:
    com.ticketdaata.ordersservice: DEBUG
    org.springframework.data.mongodb: DEBUG
    com.mongodb: DEBUG
    org.springframework.boot.autoconfigure.mongo: DEBUG
